<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /f8A3f3/ANf9/wDP/f8Axf3/ALn9/wCs/f8An/z/aqnj/2zm/f8SRJ6zAAAABgAAAAAAAAAAAAAAAAAA
        AAHXkWVi5Kd49M94Q//msor/7sWg/+3Fof/swp7/7cOg/+7FoP/quJD/1X1F/+CcZ/9yq7X/ALz7/wDE
        /f8Ayf3/AMz9/wDL/f8Ax/3/AMH9/wC4/f8Arf3/AKL9/wmN8v9UzPD/L9/9/wdKqLEAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAACxZC4hpVQmi8JnL/Ptx57/9Nu0//fmxv/24Lz/8dGn/9iIUP+JiYT/JZna/wCl
        /f8Arv3/ALT9/wC5/f8Au/3/ALr9/wC3/f8Asv3/AKr9/wCh/f8Al/3/IYnp/yXq+/8I1/3/ACmcjwAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABN3Vj2N6sOP+/rhr//857X//Oq4//zotv/647D/9dSd/7iq
        l/8ipPb/AJj9/wCf/f8Apf3/AKj9/wCr/f8Aqv3/AKf9/wCi/f8AnP3/AJT9/wiU/f8tpOr/Ceb9/yK1
        7v8AEYFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVjgjXuSscPrxwoL/9MmG//fSkP/41ZX/99OS//XM
        iv/yxIL/7rl3/5Odmv8Mmf3/CJz9/wig/f8Hov3/BaH9/wSg/f8GoP3/B579/wiZ/f8IlP3/JJP1/xrK
        9P8p4f3/PYDU1AAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABC3d0PF6KVe/+ywaf/vuXP/8cB7//LD
        f//ywX3/8Lx3/+2zbf/pqGH/35dT/0qi4P8iov3/Iqb9/yKo/f8iqf3/Iqj9/yKn/f8ipP3/IqH9/yee
        /P8loPH/Idr9/3HI8/4DMKVKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAH9WDQfnjl0//56FZ/+mp
        Yv/rr2j/67Fq/+uwaf/qq2T/56Rc/+SbUv/gkUf/hJGj/1Cy/f9JsP3/SbL9/0mz/f9Js/3/SbL9/0mw
        /f9Jrf3/O531/xrC+/9t1vr/OW7PhgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvFwUr2H03/96K
        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
        AA///AAP//4AD//+AA///wAf//8AP///wH8=
</value>
  </data>
</root>